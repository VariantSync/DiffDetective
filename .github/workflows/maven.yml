# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Install Graphviz
      run: sudo apt-get install -y graphviz
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B --file pom.xml package javadoc:javadoc
    - name: Upload Javadoc artifact
      if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}
      uses: actions/upload-pages-artifact@v1
      with:
        path: docs/javadoc

  # An additional job is recommened in the documentation of `actions/deploy-pages`
  deploy-javadoc:
    runs-on: ubuntu-latest

    if: ${{ github.event_name == 'push' && github.event.ref == 'refs/heads/main' }}

    needs: build

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    steps:
    - name: Publish Javadoc to Github Pages
      id: deployment
      uses: actions/deploy-pages@v1
